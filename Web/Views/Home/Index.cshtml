@using Application.UseCases.EmployeeToDoList.Commands
@{
    ViewData["Title"] = "Employee Management";
    var total = ViewData["Total"] as int? ?? 1;
    var pageIndex = ViewData["PageIndex"] as int? ?? 0;
    var pageSize = ViewData["PageSize"] as int? ?? 10;
    var searchingText = ViewData["SearchingText"] as string ?? null;
    var ascending = ViewData["Ascending"] as bool? ?? false;
}

@model EmployeePageModel

<div class="container">
    <h1 class="display-4 text-center">Employee Management</h1>
    <p class="text-center">Manage your employees with CRUD operations and sorting.</p>

    <div class="d-flex flex-wrap gap-2">
        <form method="get" asp-action="Index" asp-controller="Home" class="mb-3">
            <input type="hidden" name="pageSize" value=@pageSize />
            <input type="hidden" name="pageIndex" value=@pageIndex />
            <div class="input-group">
                <input type="text" name="searchingText" class="form-control" placeholder="Search..." value=@searchingText />
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </div>
        </form>

        <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createFormModal">
            + Create New
        </button>

        <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createByCsvFormModal">
            + Create New By Csv File
        </button>
    </div>


    <table class="table table-striped table-bordered" id="dataTable">
        <thead>
            <tr>
                @foreach (var prop in typeof(EmployeeViewModel).GetProperties())
                {
                    if (prop.Name == "Surname")
                    {
                        <th onclick="sortTable('@prop.Name')" class="d-flex align-items-center">
                            @prop.Name
                            <form method="get" asp-action="Index" asp-controller="Home" class="mb-3" id="sortSurnameForm">
                                <input type="hidden" name="pageSize" value=@pageSize />
                                <input type="hidden" name="pageIndex" value=@pageIndex />
                                <input type="hidden" name="searchingText" value=@searchingText />
                                <input type="hidden" name="ascending" value="@ascending" id="ascendingInput" />
                                <button type="submit" style="background: none; border: none;">
                                    <i class="bi @(ascending ? "bi-arrow-up" : "bi-arrow-down")" id="sortIcon"></i>
                                </button>
                            </form>
                        </th>
                        continue;
                    }
                    <th onclick="sortTable('@prop.Name')">@prop.Name</th>
                }
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @foreach (var employee in Model.Employees)
            {
                <tr>
                    @foreach (var prop in typeof(EmployeeViewModel).GetProperties())
                    {
                        <td>@prop.GetValue(employee)</td>
                    }
                    <td class="d-flex">
                        <form method="post" asp-controller="Home" asp-action="OpenUpdateEmployeePage" asp-route-id="@employee.Id" class="me-2">
                            <button type="submit" class="btn btn-primary mb-3">Edit</button>
                        </form>
                        <form method="post" asp-controller="Home" asp-action="DeleteEmployee" asp-route-id="@employee.Id" class="me-2" onsubmit="return confirm('Are you sure?');">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <form method="get" asp-action="Index" asp-controller="Home" class="d-flex align-items-center mt-4">
        <input type="hidden" name="searchingText" value=@searchingText />
        <div>
            <ul class="pagination mb-0">
                <li class="page-item @(pageIndex == 0 ? "disabled" : "")">
                    <button type="submit" name="pageIndex" value="@(pageIndex - 1)" class="page-link" @(pageIndex == 0 ? "disabled" : "")>&lt;</button>
                </li>

                @{
                    int totalPages = (int)Math.Ceiling((double)total / pageSize);
                    for (int i = 0; i < totalPages; i++)
                    {
                        <li class="page-item @(i == pageIndex ? "active" : "")">
                            <button type="submit" name="pageIndex" value="@i" class="page-link">@(i + 1)</button>
                        </li>
                    }
                }

                <li class="page-item @(pageIndex >= totalPages - 1 ? "disabled" : "")">
                    <button type="submit" name="pageIndex" value="@(pageIndex + 1)" class="page-link" @(pageIndex >= totalPages - 1 ? "disabled" : "")>&gt;</button>
                </li>
            </ul>
        </div>

        <div class="ms-3">
            <div class="input-group">
                <select class="form-select" id="pageSize" name="pageSize" onchange="this.form.submit()">
                    <option value="5" selected="@(pageSize == 5)">5</option>
                    <option value="10" selected="@(pageSize == 10)">10</option>
                    <option value="15" selected="@(pageSize == 15)">15</option>
                    <option value="20" selected="@(pageSize == 20)">20</option>
                </select>
            </div>
        </div>
    </form>

    @* Create new employee by csv file *@
    <div class="modal fade" id="createByCsvFormModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="formTitle">Create new Employee</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <form asp-controller="Home" asp-action="CreateEmployeeByCsv" method="post" enctype="multipart/form-data">
                        <div class="row">
                            @foreach (var prop in typeof(CreateEmployeeByCsvCommand).GetProperties())
                            {
                                var value = Model.CreateEmployeeByCsvCommand?.GetType().GetProperty(prop.Name)?.GetValue(Model.CreateEmployeeByCsvCommand);
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@prop.Name</label>

                                    @if (prop.PropertyType == typeof(IFormFile))
                                    {
                                        <input type="file" class="form-control" name="@prop.Name" accept=".csv" />
                                    }
                                    else
                                    {
                                        <input type="text" class="form-control" name="@prop.Name" value="@value" />
                                    }
                                </div>
                            }
                        </div>
                        <div class="text-end mt-4">
                            <button class="btn btn-secondary me-2" type="button" data-bs-dismiss="modal">Cancel</button>
                            <button class="btn btn-primary" type="submit">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @* Create new employee *@
    <div class="modal fade" id="createFormModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="formTitle">Create new Employee</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <form asp-controller="Home" asp-action="CreateEmployee" method="post">
                        <div class="row">
                            @foreach (var prop in typeof(CreateEmployeeCommand).GetProperties())
                            {
                                var value = Model.CreateEmployeeCommand?.GetType().GetProperty(prop.Name)?.GetValue(Model.CreateEmployeeCommand);
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@prop.Name</label>
                                    <input type="text"
                                           class="form-control"
                                           name="@prop.Name"
                                           value="@value" />
                                </div>
                            }
                        </div>
                        <div class="text-end mt-4">
                            <button class="btn btn-secondary me-2" type="button" data-bs-dismiss="modal">Cancel</button>
                            <button class="btn btn-primary" type="submit">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>