@{
    ViewData["Title"] = "Employee Management";
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    var currentPage = ViewData["CurrentPage"] as int? ?? 0;
}

@model EmployeePageModel

<div class="container">
    <h1 class="display-4 text-center">Employee Management</h1>
    <p class="text-center">Manage your employees with CRUD operations and sorting.</p>

    <div class="d-flex">
        <div class="mb-3">
            <input type="text" id="searchInput" class="form-control" placeholder="Search" oninput="filterTable()">
        </div>

        <button asp-controller="Home" asp-action="Create" class="btn btn-primary mb-3" onclick="showAddForm()">+ Create New</button>
    </div>

    <table class="table table-striped table-bordered" id="dataTable">
        <thead>
            <tr>
                @foreach (var prop in typeof(EmployeeViewModel).GetProperties())
                {
                    <th onclick="sortTable('@prop.Name')">@prop.Name</th>
                }
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @foreach (var employee in Model.Employees)
            {
                <tr>
                    @foreach (var prop in typeof(EmployeeViewModel).GetProperties())
                    {
                        <td>@prop.GetValue(employee)</td>
                    }
                    <td class="d-flex">
                        <button class="btn btn-warning" asp-controller="Home" asp-action="Update()" onclick="editEmployee('@employee.Id')">Edit</button>
                        <button class="btn btn-danger" onclick="deleteEmployee('@employee.Id')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 0; i < totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")" onclick="loadPage(@i)">
                    <a class="page-link" href="#">@(i + 1)</a>
                </li>
            }
        </ul>
    </nav>

</div>


<script>
    function showAddForm() {
        alert("Add New Employee form will be shown here.");
    }

    function deleteEmployee(id) {
        if (!confirm("Are you sure?")) return;

        fetch(`/employee/delete/${id}`, {
            method: 'POST',
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            }
        })
        .then(response => response.text())
        .then(html => {
            // Jadvalni yangilash yoki row-ni olib tashlash
            $("#tableBody").html(html); // yoki: $(`#row-${id}`).remove();
        })
        .catch(error => {
            console.error("Delete failed:", error);
        });
    }

    let currentPage = 0;
    const pageSize = 10;

    function loadPage(pageIndex) {
        currentPage = pageIndex;
        fetch(`/employee-list?PaginationParams.PageIndex=${pageIndex}&PaginationParams.PageSize=${pageSize}`)
            .then(res => res.text())
            .then(html => {
                document.querySelector("#tableBody").innerHTML =
                    new DOMParser().parseFromString(html, 'text/html').querySelector('#tableBody').innerHTML;

                document.querySelector(".pagination").innerHTML =
                    new DOMParser().parseFromString(html, 'text/html').querySelector(".pagination").innerHTML;
            });
    }

    document.addEventListener("DOMContentLoaded", () => {
        loadPage(0);
    });

</script>


@*     <div class="modal" tabindex="-1" id="formModal"> *@
@*         <div class="modal-dialog"> *@
@*             <div class="modal-content"> *@
@*                 <div class="modal-header"> *@
@*                     <h5 class="modal-title" id="formTitle">Add New Employee</h5> *@
@*                     <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
@*                 </div> *@
@*                 <div class="modal-body"> *@
@*                     <form id="form" onsubmit="submitForm(event)"> *@
@*                         <div class="mb-3"> *@
@*                             <label for="fullName" class="form-label">Full Name</label> *@
@*                             <input type="text" class="form-control" id="fullName" required> *@
@*                         </div> *@
@*                         <div class="mb-3"> *@
@*                             <label for="telephone" class="form-label">Telephone</label> *@
@*                             <input type="text" class="form-control" id="telephone" required> *@
@*                         </div> *@
@*                         <div class="mb-3"> *@
@*                             <label for="mobile" class="form-label">Mobile</label> *@
@*                             <input type="text" class="form-control" id="mobile" required> *@
@*                         </div> *@
@*                         <div class="mb-3"> *@
@*                             <label for="address" class="form-label">Address</label> *@
@*                             <input type="text" class="form-control" id="address" required> *@
@*                         </div> *@
@*                         <div class="mb-3"> *@
@*                             <label for="postcode" class="form-label">Postcode</label> *@
@*                             <input type="text" class="form-control" id="postcode" required> *@
@*                         </div> *@
@*                         <div class="mb-3"> *@
@*                             <label for="email" class="form-label">Email</label> *@
@*                             <input type="email" class="form-control" id="email" required> *@
@*                         </div> *@
@*                         <div class="mb-3"> *@
@*                             <label for="startDate" class="form-label">Start Date</label> *@
@*                             <input type="date" class="form-control" id="startDate" required> *@
@*                         </div> *@
@*                         <input type="hidden" id="editId"> *@
@*                         <button type="submit" class="btn btn-primary">Save</button> *@
@*                     </form> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@

@* @section Scripts { *@
@*     <script> *@
@*         let data = @Html.Raw(Json.Serialize(Model.Employees)); // Assuming you are passing employee data to the view *@

@*         let currentPage = 1; *@
@*         let itemsPerPage = 20; *@

@*         function renderTable() { *@
@*             const tableBody = document.getElementById("tableBody"); *@
@*             tableBody.innerHTML = ""; *@
@*             let start = (currentPage - 1) * itemsPerPage; *@
@*             let end = start + itemsPerPage; *@
@*             let paginatedData = data.slice(start, end); *@

@*             paginatedData.forEach((employee, index) => { *@
@*                 const row = document.createElement("tr"); *@
@*                 row.innerHTML = ` *@
@*                     <td>${employee.fullName}</td> *@
@*                     <td>${employee.telephone}</td> *@
@*                     <td>${employee.mobile}</td> *@
@*                     <td>${employee.address}</td> *@
@*                     <td>${employee.postcode}</td> *@
@*                     <td>${employee.email}</td> *@
@*                     <td>${new Date(employee.startDate).toLocaleDateString()}</td> *@
@*                     <td> *@
@*                         <button class="btn btn-warning" onclick="editEmployee(${start + index})">Edit</button> *@
@*                         <button class="btn btn-danger" onclick="deleteEmployee(${start + index})">Delete</button> *@
@*                     </td> *@
@*                 `; *@
@*                 tableBody.appendChild(row); *@
@*             }); *@

@*             updatePagination(); *@
@*         } *@

@*         function sortTable(columnIndex) { *@
@*             const rows = Array.from(document.querySelectorAll('#dataTable tbody tr')); *@
@*             const sortedRows = rows.sort((a, b) => { *@
@*                 const cellA = a.cells[columnIndex].innerText.toLowerCase(); *@
@*                 const cellB = b.cells[columnIndex].innerText.toLowerCase(); *@

@*                 return cellA > cellB ? 1 : -1; *@
@*             }); *@

@*             const tbody = document.querySelector("#dataTable tbody"); *@
@*             tbody.innerHTML = ""; *@
@*             sortedRows.forEach(row => tbody.appendChild(row)); *@
@*         } *@

@*         function filterTable() { *@
@*             const searchValue = document.getElementById("searchInput").value.toLowerCase(); *@
@*             const filteredData = data.filter(item => *@
@*                 item.fullName.toLowerCase().includes(searchValue) || item.telephone.toString().includes(searchValue) || *@
@*                 item.mobile.toString().includes(searchValue) || item.email.toLowerCase().includes(searchValue) *@
@*             ); *@
@*             data = filteredData; *@
@*             currentPage = 1; *@
@*             renderTable(); *@
@*         } *@

@*         function showAddForm() { *@
@*             document.getElementById("formTitle").innerText = "Add New Employee"; *@
@*             document.getElementById("fullName").value = ""; *@
@*             document.getElementById("telephone").value = ""; *@
@*             document.getElementById("mobile").value = ""; *@
@*             document.getElementById("address").value = ""; *@
@*             document.getElementById("postcode").value = ""; *@
@*             document.getElementById("email").value = ""; *@
@*             document.getElementById("startDate").value = ""; *@
@*             document.getElementById("editId").value = ""; *@
@*             new bootstrap.Modal(document.getElementById("formModal")).show(); *@
@*         } *@

@*         function submitForm(event) { *@
@*             event.preventDefault(); *@

@*             const fullName = document.getElementById("fullName").value; *@
@*             const telephone = document.getElementById("telephone").value; *@
@*             const mobile = document.getElementById("mobile").value; *@
@*             const address = document.getElementById("address").value; *@
@*             const postcode = document.getElementById("postcode").value; *@
@*             const email = document.getElementById("email").value; *@
@*             const startDate = document.getElementById("startDate").value; *@
@*             const editId = document.getElementById("editId").value; *@

@*             const newEmployee = { *@
@*                 fullName, *@
@*                 telephone, *@
@*                 mobile, *@
@*                 address, *@
@*                 postcode, *@
@*                 email, *@
@*                 startDate: new Date(startDate) *@
@*             }; *@

@*             if (editId) { *@
@*                 const index = data.findIndex(emp => emp.id === editId); *@
@*                 data[index] = newEmployee; *@
@*             } else { *@
@*                 newEmployee.id = new Date().getTime(); *@
@*                 data.push(newEmployee); *@
@*             } *@

@*             new bootstrap.Modal(document.getElementById("formModal")).hide(); *@
@*             renderTable(); *@
@*         } *@

@*         function editEmployee(index) { *@
@*             const employee = data[index]; *@
@*             document.getElementById("formTitle").innerText = "Edit Employee"; *@
@*             document.getElementById("fullName").value = employee.fullName; *@
@*             document.getElementById("telephone").value = employee.telephone; *@
@*             document.getElementById("mobile").value = employee.mobile; *@
@*             document.getElementById("address").value = employee.address; *@
@*             document.getElementById("postcode").value = employee.postcode; *@
@*             document.getElementById("email").value = employee.email; *@
@*             document.getElementById("startDate").value = new Date(employee.startDate).toISOString().split('T')[0]; *@
@*             document.getElementById("editId").value = employee.id; *@
@*             new bootstrap.Modal(document.getElementById("formModal")).show(); *@
@*         } *@

@*         function deleteEmployee(index) { *@
@*             data.splice(index, 1); *@
@*             renderTable(); *@
@*         } *@

@*         function changePage(direction) { *@
@*             if (direction === "next" && currentPage * itemsPerPage < data.length) { *@
@*                 currentPage++; *@
@*             } else if (direction === "previous" && currentPage > 1) { *@
@*                 currentPage--; *@
@*             } *@
@*             renderTable(); *@
@*         } *@

@*         function updatePagination() { *@
@*             document.getElementById("previousPage").classList.toggle("disabled", currentPage === 1); *@
@*             document.getElementById("nextPage").classList.toggle("disabled", currentPage * itemsPerPage >= data.length); *@
@*         } *@

@*         renderTable(); *@
@*     </script> *@
@* } *@
